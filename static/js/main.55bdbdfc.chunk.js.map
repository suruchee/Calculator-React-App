{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","App.jsx","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handelClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handelEqual","evaluate","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8XAMaA,EAAS,SAACC,GAAD,OACpB,qBACEC,UAAS,0BALOC,EAMHF,EAAMG,SALbC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAKG,WAAP,OAE/BG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,WAJzC,SAMGH,EAAMG,WAVQ,IAACD,GCAPK,G,OAAQ,SAACP,GAAD,OAAW,qBAAKC,UAAU,QAAf,SAAwBD,EAAMQ,UCAjDC,G,OAAc,SAACT,GAAD,OACzB,qBAAKC,UAAU,YAAYI,QAASL,EAAMU,YAA1C,SACGV,EAAMG,a,SCuDIQ,E,kDApDb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAKRY,WAAa,SAACV,GACZ,EAAKW,SAAS,CAAEL,MAAO,EAAKM,MAAMN,MAAQN,KAPzB,EASnBa,YAAc,WACZ,EAAKF,SAAS,CAAEL,MAAOQ,YAAS,EAAKF,MAAMN,UAR3C,EAAKM,MAAQ,CACXN,MAAO,IAHQ,E,0CAYnB,WAAU,IAAD,OACP,OACE,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAOO,MAAOS,KAAKH,MAAMN,MAAzB,eACA,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAa,kBAAM,EAAKS,eAAhC,eACA,cAAC,EAAD,CAAQT,YAAaW,KAAKL,WAA1B,kBAEF,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKG,SAAS,CAAEL,MAAO,MAAvD,8B,GA3CMU,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.55bdbdfc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nconst isOperator = (val) => {\n  return !isNaN(val) || val === \".\" || val === \"=\";\n};\nexport const Button = (props) => (\n  <div\n    className={`button-wrapper ${\n      isOperator(props.children) ? null : \"operator\"\n    }`}\n    onClick={() => props.handelClick(props.children)}\n  >\n    {props.children}\n  </div>\n);\n","import React from \"react\";\nimport \"./Input.css\";\n\nexport const Input = (props) => <div className=\"input\">{props.input}</div>;\n","import React from \"react\";\nimport \"./ClearButton.css\";\n\nexport const ClearButton = (props) => (\n  <div className=\"clear-btn\" onClick={props.handleClear}>\n    {props.children}\n  </div>\n);\n","import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"./components/Button\";\nimport { Input } from \"./components/Input\";\nimport { ClearButton } from \"./components/ClearButton\";\nimport { evaluate } from \"mathjs\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n    };\n  }\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n  };\n  handelEqual = () => {\n    this.setState({ input: evaluate(this.state.input) });\n  };\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input={this.state.input}> </Input>\n          <div className=\"row\">\n            <Button handelClick={this.addToInput}>7</Button>\n            <Button handelClick={this.addToInput}>8</Button>\n            <Button handelClick={this.addToInput}>9</Button>\n            <Button handelClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handelClick={this.addToInput}>4</Button>\n            <Button handelClick={this.addToInput}>5</Button>\n            <Button handelClick={this.addToInput}>6</Button>\n            <Button handelClick={this.addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handelClick={this.addToInput}>1</Button>\n            <Button handelClick={this.addToInput}>2</Button>\n            <Button handelClick={this.addToInput}>3</Button>\n            <Button handelClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handelClick={this.addToInput}>.</Button>\n            <Button handelClick={this.addToInput}>0</Button>\n            <Button handelClick={() => this.handelEqual()}>=</Button>\n            <Button handelClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({ input: \"\" })}>\n              Clear\n            </ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}